# Configuration file for edge server / gateway
# Convention to use 443 as HTTPS port
server.port: 8443

# virtual host name used by eureka server
spring.application.name: gateway

# ssl certificate for HTTPS communication
server.ssl:
  key-store-type: PKCS12
  key-store: classpath:keystore/edge.p12
  key-store-password: password
  key-alias: localhost

# Basic authorization at discovery Eureka server
eureka-username: u
eureka-password: p

eureka-server: localhost
auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${eureka-username}:${eureka-password}${eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.cloud.gateway.routes:
# name of route
- id: composite
  # request rote to service name composite in eureka discovery service.
  # lb:// means "use client load balancer" as declared in GatewayApplication
  uri: lb://composite
  # ** matches 0 or more elements in the path
  predicates:
  - Path=/composite/**

- id: oauth2-server
  uri: lb://authorization
  predicates:
    - Path=/oauth2/**

- id: oauth2-login
  uri: lb://authorization
  predicates:
    - Path=/login/**

- id: oauth2-error
  uri: lb://authorization
  predicates:
    - Path=/error/**

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${auth-server}:9999

---
spring.config.activate.on-profile: docker

SCHEME: http
PROD_SERVICE_HOST: product
PROD_SERVICE_PORT: 8080
PROD_RECOMMENDATION_HOST: recommendation
PROD_RECOMMENDATION_PORT: 8080

eureka-server: eureka
auth-server: authorization

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
